buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.ohn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	def querydslVersion = "4.1.4"

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile ("com.querydsl:querydsl-core:$querydslVersion")
	compile ("com.querydsl:querydsl-apt:$querydslVersion")
	compile ("com.querydsl:querydsl-jpa:$querydslVersion")

	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compileOnly("org.projectlombok:lombok:1.16.10")
}

def queryDslOutput = file("src/main/generated")

sourceSets {
	main {
		java {
			srcDir queryDslOutput
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
	source = sourceSets.main.java
	classpath = configurations.compile
	destinationDir = queryDslOutput
	options.compilerArgs = [
			"-proc:only",
			"-processor", 'com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
	]
}

compileTestJava.dependsOn(generateQueryDSL)
compileJava.dependsOn(generateQueryDSL)

clean {
	delete queryDslOutput
}
